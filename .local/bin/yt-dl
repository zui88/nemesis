#!/bin/bash

mp3 () {
    youtube-dl -i --extract-audio -f bestaudio --audio-format mp3 --audio-quality 0 -o '~/Music/youtube/%(title)s.%(ext)s' "$1"
}

mp3p () {
    youtube-dl --ignore-errors -f bestaudio --extract-audio --audio-format mp3 --audio-quality 0 -o '~/Music/youtube/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' "$1"
}

dlv () {
    youtube-dl -f bestvideo -o '~/Videos/youtube/%(title)s.%(ext)s' "$1"
}

dlp () {
    youtube-dl -f bestvideo --ignore-errors -o '~/Videos/youtube/%(playlist)s/%(title)s.%(ext)s' "$1"
}

usage() {
    echo "$0 [-1..4] \"URL\"" >&2
    echo "-1 nur track herunterladen" >&2
    echo "-2 playlist herunterladen" >&2
    echo "-3 nur video herunterladen" >&2    
    echo "-4 videoplaylist herunterladen" >&2
    echo "default wie 1"
}

# Abarbeiten der angegebenen Optionen
# Betrachte Optionen hH, 1, 2, 3, 4
while getopts hH1234 opt
do
    case $opt in
	# Vom Benutzer gesetzte Optionen merken
	# free space neccesarry for determination of each given options/flags
	[1234]) option="${option} $opt";;
	# Hilfe ausgeben und Beenden
	[hH]) usage; exit 1;;
	*)    usage; exit 1;; 
    esac
done

# option not empty string
if [[ $option ]]
then
    for arg in $option
    do
	# debugging
	#    echo "$arg"
	case $arg in
	    1) (mp3  $2) ;;
	    2) (mp3p $2) ;;
	    3) (dlv  $2) ;;
	    4) (dlp  $2) ;;
	    *) usage exit ;;
	esac
    done
else
    # no arguments given -> default
    mp3 $1
fi

